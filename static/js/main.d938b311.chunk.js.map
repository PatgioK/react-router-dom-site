{"version":3,"sources":["App.tsx","reportWebVitals.ts","data.tsx","routes/invoices.tsx","routes/invoice.tsx","routes/unidirectionflow.tsx","routes/key.tsx","routes/pvs.tsx","routes/liftUp.tsx","routes/control.tsx","routes/context.tsx","routes/renderProps.tsx","routes/memo.tsx","routes/useCallback.tsx","index.tsx"],"names":["App","className","style","borderBottom","paddingBottom","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","invoices","name","number","amount","due","Invoices","useSearchParams","searchParams","setSearchParams","display","borderRight","padding","value","get","onChange","event","filter","target","invoice","toLowerCase","startsWith","toLocaleLowerCase","map","margin","color","isActive","Invoice","navigate","useNavigate","params","useParams","parseInt","invoiceId","find","onClick","deleteInvoice","Unidirectionflow","useState","state4","setState4","state5","type","e","handleChange4","Child","props","GrandChild","Pvs","List","console","log","obj","element","index","ItemCount","num","LiftUp","state","length","Controlled","setState","alert","Uncontrolled","inputRef","useRef","useEffect","current","focus","ref","Control","data","i","newDat","id","push","Item","delete","Key","deleteNumber","n","newData","globContex","React","createContext","gcContext","useContext","Context","Provider","DetectHover","hovered","setHovered","onMouseOver","onMouseLeave","render","RenderProps","backgroundColor","memo","Memo","localValue","setLocalValue","UseCallback","useCallback","ReactDOM","StrictMode","path","document","getElementById"],"mappings":"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","file":"static/js/main.d938b311.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <h3> henlo</h3>\n            <nav\n                style={{\n                    borderBottom: \"solid 1px\",\n                    paddingBottom: \"1rem\",\n                }}\n            >\n                <Link className=\"Link\" to=\"/\">\n                    home\n                </Link>\n                \n                <Link className=\"Link\" to=\"/invoices\">\n                    Invoices\n                </Link>\n                <Link className=\"Link\" to=\"/unidirectionflow\">\n                    unidirectionflow\n                </Link>\n                <Link className=\"Link\" to=\"/pvs\">\n                    PvS\n                </Link>\n                \n                <Link className=\"Link\" to=\"/liftUp\">\n                    liftUp\n                </Link>\n                <Link className=\"Link\" to=\"/control\">\n                    control\n                </Link>\n\n                <Link className=\"Link\" to=\"/key\">\n                    Key\n                </Link>\n                <Link className=\"Link\" to=\"/context\">\n                    Context\n                </Link>\n                <Link className=\"Link\" to=\"/renderProps\">\n                    RenderProps\n                </Link>\n                <Link className=\"Link\" to=\"/memo\">\n                    Memo\n                </Link>\n                <Link className=\"Link\" to=\"/useCallback\">\n                    UseCallback\n                </Link>\n            </nav>\n\n            <Outlet />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let invoices = [\r\n    {\r\n      name: \"Santa Monica\",\r\n      number: 1995,\r\n      amount: \"$10,800\",\r\n      due: \"12/05/1995\"\r\n    },\r\n    {\r\n      name: \"Stankonia\",\r\n      number: 2000,\r\n      amount: \"$8,000\",\r\n      due: \"10/31/2000\"\r\n    },\r\n    {\r\n      name: \"Ocean Avenue\",\r\n      number: 2003,\r\n      amount: \"$9,500\",\r\n      due: \"07/22/2003\"\r\n    },\r\n    {\r\n      name: \"Tubthumper\",\r\n      number: 1997,\r\n      amount: \"$14,000\",\r\n      due: \"09/01/1997\"\r\n    },\r\n    {\r\n      name: \"Wide Open Spaces\",\r\n      number: 1998,\r\n      amount: \"$4,600\",\r\n      due: \"01/27/2998\"\r\n    }\r\n  ];\r\n  \r\n  export function getInvoices() {\r\n    return invoices;\r\n  }\r\n  \r\n  export function getInvoice(number: number) {\r\n    return invoices.find(\r\n      invoice => invoice.number === number\r\n    );\r\n  }\r\n\r\n  export function deleteInvoice(number: number) {\r\n    invoices = invoices.filter(\r\n      invoice => invoice.number !== number\r\n    );\r\n  }","import { NavLink, Link, Outlet, useSearchParams } from \"react-router-dom\";\r\nimport { getInvoices } from \"../data\";\r\n\r\nexport default function Invoices() {\r\n  let invoices = getInvoices();\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <nav\r\n        style={{\r\n          borderRight: \"solid 1px\",\r\n          padding: \"1rem\"\r\n        }}\r\n      >\r\n      <input\r\n        value={searchParams.get(\"filter\") || \"\"}\r\n        onChange={event => {\r\n          let filter = event.target.value;\r\n          if (filter) {\r\n            setSearchParams({ filter });\r\n          } else {\r\n            setSearchParams({});\r\n          }\r\n        }}\r\n      />\r\n        {invoices\r\n\r\n        .filter(invoice => {\r\n            let filter = searchParams.get(\"filter\");\r\n            if(!filter) return true;\r\n            let name = invoice.name.toLowerCase();\r\n            return name.startsWith(filter.toLocaleLowerCase())\r\n\r\n\r\n\r\n        })\r\n        \r\n        .map(invoice => (\r\n          <NavLink\r\n        // Navlink isActive:  style can either be a React.CSSProperties object or a function that returns a style object.\r\n        // If the function style is used, the link’s active state is passed as a parameter.\r\n          style={({ isActive }) => {\r\n            return {\r\n              display: \"block\",\r\n              margin: \"1rem 0\",\r\n              color: isActive ? \"red\" : \"\"\r\n            };\r\n          }}\r\n          to={`/invoices/${invoice.number}`}\r\n          key={invoice.number}\r\n        >\r\n          {invoice.name}\r\n        </NavLink>\r\n        ))\r\n        }\r\n\r\n      </nav>\r\n      <Outlet />\r\n    </div>\r\n  );\r\n}\r\n","import { useParams, useNavigate } from \"react-router\";\r\nimport { getInvoice, deleteInvoice } from \"../data\";\r\n\r\ninterface invoice {\r\n  name: string;\r\n  number: number;\r\n  amount: string;\r\n  due: string;\r\n}\r\n\r\nexport default function Invoice() {\r\n  // let params = useParams();\r\n  let navigate = useNavigate();\r\n  let params = useParams<string>();\r\n  let invoice = getInvoice(parseInt(params.invoiceId as string)) as invoice;\r\n\r\n  return (\r\n    <main style={{ padding: \"1rem\" }}>\r\n      <h2>Total Due: {invoice.amount}</h2>\r\n      <p>\r\n        {invoice.name}: {invoice.number}\r\n      </p>\r\n      <p>Due Date: {invoice.due}</p>\r\n       <p>\r\n        <button\r\n          onClick={() => {\r\n            deleteInvoice(invoice.number);\r\n            navigate(\"/invoices\");\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </p>\r\n    </main>\r\n  );\r\n}\r\n","import React, { ChangeEvent, ChangeEventHandler, useState } from \"react\";\r\n\r\nexport default function Unidirectionflow() {\r\n  const [state4, setState4] = useState(\"\");\r\n  const [state5, setState5] = useState(\"\");\r\n\r\n  let handleChange = () => {};\r\n  let handleChange4 = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    setState4((e.target as HTMLInputElement).value);\r\n  };\r\n\r\n  // also works\r\n  // let handleChange5 = (event: ChangeEvent<HTMLInputElement>) => {\r\n  //   setState5(event.currentTarget.value);\r\n  // };\r\n\r\n  return (\r\n    <main>\r\n      <p>In React, data only flows one way! State -&gt; stuff.  Both inputs get their value from\r\n        state, but only one input writes to state. Only one has its changes reflected in the DOM.\r\n      </p>\r\n      <input type=\"text\" value={state4} onChange={(e) => handleChange4(e)} />\r\n      <input type=\"text\" value={state5} onChange={(e) => handleChange()} />\r\n    </main>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\ninterface numberandId {\r\n    number: number;\r\n    id: number;\r\n}\r\n\r\nconst data: Array<numberandId> = [];\r\n\r\nfor (let i = 0; i < 10; i++) {\r\n    let newDat = {} as numberandId;\r\n    newDat.number = i;\r\n    newDat.id = i;\r\n    data.push(newDat);\r\n}\r\n\r\ninterface itemProps {\r\n    number:number;\r\n    id:number;\r\n    delete: (n:number) => void;\r\n}\r\nconst Item: React.FC<itemProps>  = (props) => {\r\n    return <h1 onClick={() => props.delete(props.id)}>{props.number}</h1>;\r\n}\r\n\r\nconst Key: React.FC = () => {\r\n    const [state, setState] = useState(data);\r\n\r\n    function deleteNumber(n:number) {\r\n        const newData = state.filter((num) => num.id !== n);\r\n        setState(newData);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p> Every item in the data array has a unique key! click an item to delete, check dev tools element!\r\n                Because we use a unique identifier, React knows it doesnt have to re-render the whole tree.\r\n                If you use the index as a key, it thinks every item has changed and will re-render everything.\r\n                </p>\r\n            {state.map((n, i) => {\r\n                return (\r\n                    <Item delete={deleteNumber} key={n.id} id={n.id} number={n.number}/>\r\n\r\n                    // *** key = index here as non unique identifier. will force re-render of every item\r\n                    // <Item delete={deleteNumber} key={i} id={n.id} number={n.number}/>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Key;\r\n","import React from \"react\";\r\n\r\n// Props VS State\r\n// State = variables defined locally inside component, can be manipulated / mutated\r\n// Props = passed to children, cannot be changed. Child must ask parent to change data.\r\n\r\ninterface Person {\r\n  firstName: string;\r\n  lastName: string;\r\n}\r\n\r\ninterface Props {\r\n  name: string;\r\n  id?: number;\r\n  ok?: boolean;\r\n  fn?: (bob: string) => string;\r\n  obj?: {\r\n    f1: string;\r\n  };\r\n  person?: Person;\r\n}\r\n\r\nconst Pvs: React.FC<Props> = (props) => {\r\n  return <Child name={props.name} />;\r\n};\r\n\r\ninterface ChildProps {\r\n  name: string;\r\n}\r\n\r\nconst Child: React.FC<ChildProps> = (props) => {\r\n  return <GrandChild name={props.name} />;\r\n};\r\n\r\ninterface GCProps {\r\n  name: string;\r\n}\r\nconst GrandChild: React.FC<GCProps> = (props) => {\r\n  return (\r\n    <div>\r\n      <p>\r\n        React uses a state model where variables are locally declared. The state\r\n        can then be passed down to child components as props.\r\n      </p>\r\n      <p>\r\n        {\" \"}\r\n        My name is in the parent state; gets passed down as props through\r\n        children to the grandchild component. Not using context.\r\n      </p>\r\n      <h1>{props.name}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pvs;\r\n","import { useState } from \"react\";\r\n\r\ninterface liftProps {\r\n  obj: [foo: string, bar: string];\r\n}\r\nconst LiftUp: React.FC<liftProps> = (props) => {\r\n  const [state, setState] = useState(props);\r\n\r\n  return (\r\n    <div>\r\n      <p> both components use parent props</p>\r\n      <List obj={props.obj} />\r\n      <ItemCount num={state.obj.length} />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface listProps {\r\n  obj: [foo: string, bar: string];\r\n}\r\nconst List: React.FC<listProps> = (props) => {\r\n  console.log(props);\r\n  console.log(props.obj);\r\n  console.log(props.obj[1]);\r\n  return (\r\n    <div>\r\n      <p> list component string items: </p>\r\n      {props.obj.map((element, index) => (\r\n        <h1 key={index}>{element}</h1>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface icProps {\r\n  num: number;\r\n}\r\nconst ItemCount: React.FC<icProps> = (props) => {\r\n  return (\r\n    <div>\r\n      <p>component item count:</p>\r\n      <h1>{props.num}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiftUp;\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\n\r\nconst Control: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <p> Controlled vs Uncontrolled components </p>\r\n            <Controlled />\r\n            <Uncontrolled />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Controlled: React.FC = () => {\r\n    const [state, setState] = useState<string>(\"\");\r\n\r\n    function alertValue() {\r\n        alert(state);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p> Controlled component has a state binded to it </p>\r\n            <input\r\n            type=\"text\"\r\n            value={state}\r\n            onChange={ e => setState(e.target.value)}\r\n            />\r\n            <button onClick={alertValue}>Click Me</button>\r\n        </div>\r\n    )\r\n}\r\ninterface RefObject<T> {\r\n    readonly current: T | null\r\n  }\r\n  \r\nconst Uncontrolled: React.FC = () => {\r\n    // const inputRef = useRef< HTMLInputElement | null> (null);\r\n    const inputRef:RefObject<HTMLInputElement> = useRef< HTMLInputElement | null> (null);\r\n    \r\n    // every ref actually has a .current property which stores its actual value.\r\n    \r\n    useEffect(() => {\r\n        inputRef.current!.focus();\r\n    }, [])\r\n    // Pass an array as optional second argument. If value in second argument is the same as before re-render\r\n    // React will skip this effect! Optimization!. In this example it doesnt actually do anything.\r\n\r\n    function alertValue() {\r\n        // variable!.var is the non-null assertion operator. Tells the compiler this expression\r\n        // cannot be null or undefined.\r\n        alert(inputRef.current!.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p> Uncontrolled components do not have state data. also using a ref.current to automatically\r\n                set focus when this page loads! cool!\r\n            </p>\r\n            <input type=\"text\" ref={inputRef} />\r\n            <button onClick={alertValue}>Click Me</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Control;","import React, { useContext } from \"react\";\r\n\r\n// wrap a context.provider in your component to pass down data in the tree!\r\nconst globContex = React.createContext<number | null>(null);\r\n\r\nconst Child: React.FC = () => {\r\n    return <GrandChild />;\r\n};\r\n\r\nconst GrandChild: React.FC = (props) => {\r\n    const gcContext = useContext(globContex);\r\n    return <h1>{gcContext}</h1>;\r\n};\r\n\r\nconst Context: React.FC = () => {\r\n    return (\r\n        <globContex.Provider value={1}>\r\n            <div>\r\n                <p>\r\n                    Context allows data to be passed down to all components of the same tree.\r\n                    </p>\r\n                <Child />\r\n            </div>\r\n        </globContex.Provider>\r\n    );\r\n};\r\n\r\nexport default Context;\r\n","import { ReactNode, useState } from \"react\"\r\n\r\n\r\nconst RenderProps = (props: any) => {\r\n\r\n    function render(hovered: any) {\r\n        const style = {\r\n            backgroundColor: hovered ? \"red\" : \"\"\r\n        }\r\n        return (\r\n            <div style={style}>\r\n                <h1>Render Props!</h1>\r\n                <p>\r\n                    Render props were used to encapsulate logic into one component; To be used in other multiple\r\n                    components. A child component that is passed a render prop, that contains a function for how to render\r\n                    the jsx element.\r\n\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n    return <DetectHover render={render} />\r\n}\r\n\r\nconst DetectHover: React.FC<{ render: (hovered: any) => ReactNode }> = (props) => {\r\n    const [hovered, setHovered] = useState(false);\r\n    return (\r\n        <div\r\n            onMouseOver={() => setHovered(true)}\r\n            onMouseLeave={() => setHovered(false)}\r\n        >\r\n            {props.render(hovered)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenderProps;","import { useState, memo } from \"react\";\r\n\r\n\r\nconst Memo: React.FC = () => {\r\n    const [localValue, setLocalValue] = useState(0);\r\n\r\n    return (\r\n        <div>\r\n            <Child />\r\n            <h1>\r\n                LocalValue: {localValue}\r\n            </h1>\r\n            <button onClick={() => setLocalValue(localValue + 1)}>\r\n            changeLocalValue\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Child: React.FC = memo(() => {\r\n    \r\n    console.log(\"child render\");\r\n    return (\r\n        <div>\r\n    <h1>Child</h1>\r\n    <p>\r\n        Memo is used for child componenets to only re-render when its props change!\r\n    </p>\r\n    <p>\r\n        useCallback is like memo but only for functions passed as props!\r\n    </p>\r\n    </div>\r\n    )\r\n})\r\n\r\n\r\nexport default Memo;","import { useState, memo, useCallback } from \"react\";\r\n\r\n\r\nconst UseCallback: React.FC = () => {\r\n    const [localValue, setLocalValue] = useState(0);\r\n\r\n    const someFunc = () => { }\r\n\r\n    const memoizedFunc = useCallback(someFunc, []);\r\n\r\n    return (\r\n        <div>\r\n            {/* <Child func={someFunc}/> */}\r\n            <h1>\r\n                LocalValue: {localValue}\r\n            </h1>\r\n            <button onClick={() => setLocalValue(localValue + 1)}>\r\n                changeLocalValue\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Child: React.FC = memo((props) => {\r\n    console.log(\"child render\");\r\n    return <h1>Child</h1>\r\n})\r\n\r\n\r\nexport default UseCallback;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Invoices from \"./routes/invoices\";\n\nimport Invoice from \"./routes/invoice\";\nimport Unidirectionflow from \"./routes/unidirectionflow\";\nimport Pvs from \"./routes/pvs\";\nimport LiftUp from \"./routes/liftUp\";\nimport Control from \"./routes/control\";\nimport Key from \"./routes/key\";\nimport Context from \"./routes/context\";\nimport RenderProps from \"./routes/renderProps\"\nimport Memo from \"./routes/memo\";\nimport UseCallback from \"./routes/useCallback\";\n\n// Routing tutorial: https://github.com/remix-run/react-router/blob/main/docs/getting-started/tutorial.md\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Routes>\n                <Route path=\"/\" element={<App />}>\n                    <Route\n                        path=\"unidirectionflow\"\n                        element={<Unidirectionflow />}\n                    />\n                    <Route path=\"pvs\" element={<Pvs name=\"Pat\" />} />\n                    <Route\n                        path=\"liftUp\"\n                        element={<LiftUp obj={[\"test1\", \"test2\"]} />}\n                    />\n                    <Route path=\"control\" element={<Control />} />\n                    <Route path=\"key\" element={<Key />} />\n                    <Route path=\"context\" element={<Context />} />\n                    <Route path=\"renderProps\" element={<RenderProps />} />\n                    <Route path=\"memo\" element={<Memo />} />\n                    <Route path=\"useCallback\" element={<UseCallback />} />\n\n                    <Route path=\"invoices\" element={<Invoices />}>\n                        <Route\n                            index\n                            element={\n                                <main style={{ padding: \"1rem\" }}>\n                                    <p>Select an invoice</p>\n                                </main>\n                            }\n                        />\n                        {/* index route, \n                         Index routes render in the parent routes outlet at the parent route's path.\n                         Index routes match when a parent route matches but none of the other children match.\n                         Index routes are the default child route for a parent route.\n                          Index routes render when the user hasn't clicked one of the items in a navigation list yet. */}\n                        <Route path=\":invoiceId\" element={<Invoice />} />\n                    </Route>\n\n                    {/* '*' is has a special meaning here, it will match when no other routes do.  */}\n                    <Route\n                        path=\"*\"\n                        element={\n                            <main style={{ padding: \"1rem\" }}>\n                                <p>Theres nothing here!</p>\n                            </main>\n                        }\n                    />\n                </Route>\n            </Routes>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}